{"version":3,"sources":["components/Header.js","components/useOutsideClick.js","components/Todo.js","components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["Header","addTodo","useState","text","setText","priority","setPriority","className","href","onSubmit","e","preventDefault","alert","type","value","placeholder","onChange","target","useOutsideClick","ref","callback","handleClick","current","contains","useEffect","document","addEventListener","removeEventListener","Todo","todo","toggleComplete","togglePriority","removeTodo","isActive","setIsActive","useRef","onClick","id","isComplete","icon","faCheck","size","style","backgroundColor","faTimes","Todos","todoArray","console","log","map","App","num","setTodoArray","length","count","setCount","useOutsideClick2","sortByPriority","sorted","sort","a","b","sorter","sortByComplete","name","faSortDown","newPriority","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.857ceace.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst Header = ({addTodo}) => {\n    const [text, setText] = useState('')\n    const [priority, setPriority] = useState('Not set')\n\n    const onClick = (e) => {\n        e.preventDefault()\n        if(!text) {\n            alert('Please add text')\n            return\n        }\n        addTodo({text, priority})\n        setText(\"\")\n        setPriority(\"Not set\")\n\n    }\n\n    return (\n        <div className=\"app-header\">\n            <div className=\"header-container\">\n                <a className=\"header-title\" href=\"index.html\"><h1>React Todos</h1></a>\n                <form onSubmit={onClick}>\n                    <input className=\"add-todo-text\" type=\"text\" value={text} placeholder=\"Add todo\"  onChange={(e) => {setText(e.target.value)}}/>\n                    <select type=\"submit\" className=\"header-priority-selector\" value={priority} onChange={(e) => {setPriority(e.target.value)}}>\n                        <option value=\"Not set\">Select Priority</option>\n                        <option value=\"Not set\">Not Set</option>\n                        <option value=\"Low\">Low</option>\n                        <option value=\"Medium\">Medium</option>\n                        <option value=\"High\">High</option>\n                    </select>\n                    <input className=\"form-submit-btn\" type=\"submit\" value=\"+\" />\n                </form>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Header\n","import { useEffect } from \"react\";\n\nconst useOutsideClick = (ref, callback) => {\n  const handleClick = e => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      callback();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  });\n};\n\nexport default useOutsideClick;","import React, { useState, useRef } from 'react';\nimport useOutsideClick from \"./useOutsideClick\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst Todo = ({todo, toggleComplete, togglePriority, removeTodo}) => {\n    const [isActive, setIsActive] = useState(false);\n    const togglePriorityList = () => setIsActive(!isActive);\n    const [priority, setPriority] = useState('Not set');\n\n    const ref = useRef();\n\n    const onClick = (e) => {\n        e.preventDefault()\n        togglePriority(todo.id, priority)\n\n    }\n\n    useOutsideClick(ref, () => {\n        if (isActive) setIsActive(!isActive);\n    });\n\n    return (\n        <div className='todo'>\n            <button className=\"completed-btn-container\" onClick={() => toggleComplete(todo.id)}>\n                <div className={todo.isComplete ? \"check-box-active\": \"check-box\"} ><FontAwesomeIcon icon={faCheck} size=\"xs\"/></div>\n            </button>\n            <div className=\"title-btn-container\">\n                <div className=\"todo-text\">{todo.text}</div>\n            </div>\n            <div className=\"priority-btn-container\">\n                <button className=\"priority-btn\" onClick={togglePriorityList} style={todo.priority === 'High' ? { backgroundColor:'#A61C3C'}: todo.priority === 'Medium' ? { backgroundColor:'#F4AC45'} : todo.priority === 'Low' ? { backgroundColor:'#92BFB1'} : {backgroundColor:'gray'}} ref={ref}>\n                    {todo.priority}\n                    <nav className={`menu ${isActive ? \"active\" : \"inactive\"}`}>\n                        <form onSubmit={onClick}>\n                            <div className=\"priority-selector\">\n                                <button className=\"priority-btn-option\" onClick={(e) => {setPriority(e.target.value)}} value=\"Not set\" style={{ backgroundColor:'gray'}}>Not Set</button>\n                                <button className=\"priority-btn-option\" onClick={(e) => {setPriority(e.target.value)}} value=\"Low\" style={{ backgroundColor:'#92BFB1'}}>Low</button>\n                                <button className=\"priority-btn-option\" onClick={(e) => {setPriority(e.target.value)}} value=\"Medium\" style={{ backgroundColor:'#F4AC45'}}>Medium</button>\n                                <button className=\"priority-btn-option\" onClick={(e) => {setPriority(e.target.value)}} value=\"High\" style={{ backgroundColor:'#A61C3C'}}>High</button>\n                            </div>\n                        </form>\n                    </nav>\n                </button>\n            </div>\n            <button className=\"remove-btn-container\">\n                <div className=\"remove-btn\" onClick={() => removeTodo(todo.id)}><FontAwesomeIcon icon={faTimes} size=\"xs\"/></div>\n            </button>\n        </div>\n    )\n}\n\nexport default Todo\n","import React from 'react'\nimport Todo from './Todo'\n\nconst Todos = ({todoArray, toggleComplete, togglePriority, removeTodo}) => {\n    console.log(todoArray)\n    return (\n        <div className='todos-list'>\n            {todoArray.map(todo => (\n                <Todo key={todo.id} todo={todo} toggleComplete={toggleComplete} togglePriority={togglePriority} removeTodo={removeTodo} />\n            ))}\n\n        </div>\n    )\n}\n\nexport default Todos\n","import './App.css';\nimport React, { useState, useRef } from 'react';\nimport Header from './components/Header';\nimport Todos from './components/Todos';\nimport useOutsideClick2 from \"./components/useOutsideClick\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\n\nfunction App() {\n\n  const [todoArray, setTodoArray] = useState( [\n    {id: 1, text: 'Shopping', isComplete: false, priority: 'Low', num: 2},\n    {id: 2, text: 'Learn React', isComplete: true, priority: 'High', num: 1},\n    {id: 3, text: 'Running', isComplete: false, priority: 'Medium', num: 3},\n  ])\n  const [count, setCount] = useState(todoArray.length +1);\n  const [isActive, setIsActive] = useState(false);\n  const toggleSortList = () => setIsActive(!isActive);\n\n\n  const ref = useRef();\n\n  useOutsideClick2(ref, () => {\n    if (isActive) setIsActive(!isActive);\n  });\n\n  const addTodo = (todo) => {\n    setCount(count +1)\n    const name = {id: count, text: todo.text, isComplete: false, priority: todo.priority}\n    setTodoArray([...todoArray, name])\n\n  }\n\n  const toggleComplete = (id) => {\n    setTodoArray(\n      todoArray.map((todo) =>\n        todo.id === id ? {...todo, isComplete: !todo.isComplete} : todo\n      )\n    )\n  }\n\n  const togglePriority = (id, newPriority) => {\n    setTodoArray(\n      todoArray.map((todo) =>\n        todo.id === id ? {...todo, priority: newPriority} : todo\n      )\n    )\n\n  }\n\n  const removeTodo = (id) => {\n    setTodoArray(\n      todoArray.filter((todo) => todo.id !== id )\n    )\n  }\n\n  const sortByPriority = () => {\n    const sorted = [...todoArray].sort((a, b) => {\n      const sorter = {\n        \"Not set\": 0,\n        \"Low\": 1,\n        \"Medium\": 2,\n        \"High\": 3,\n      }\n      return sorter[a.priority] - sorter[b.priority]\n    });\n    setTodoArray(sorted);\n  }\n\n  const sortByComplete = () => {\n    const sorted = [...todoArray].sort((a, b) => {\n      return a.isComplete - b.isComplete\n    });\n    setTodoArray(sorted);\n\n  }\n  \n  return (\n    <div className=\"App\">\n      <Header addTodo={addTodo} />\n      <div className=\"sort-container\">\n        <button className=\"sort-btn\" onClick={toggleSortList} ref={ref} >Sort <FontAwesomeIcon icon={faSortDown} className=\"arrow-icon\" />\n          <div className={` ${isActive ? \"sort-list-active\" : \"sort-list\"}`} >\n            <button className=\"sort-list-btn\" onClick={sortByPriority}>Priority</button>\n            <button className=\"sort-list-btn\" onClick={sortByComplete}>Completed</button>\n          </div>\n        </button>\n      </div>\n      <Todos todoArray={todoArray} sortByPriority={sortByPriority} sortByComplete={sortByComplete} toggleComplete={toggleComplete} togglePriority={togglePriority} removeTodo={removeTodo} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}